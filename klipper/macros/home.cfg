
[gcode_macro _CG28]
gcode:
   
   
   {% if "xyz" not in printer.toolhead.homed_axes %}
    {action_respond_info("Homing active!")} 
    #SET_PIN PIN=daylight VALUE=1.00
  G28                  # Full home (XYZ)
  G90 
    {% else %}
    {action_respond_info("All Axes homed!")}
    {% endif %}

[gcode_macro _HOME_X]
gcode:

    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=sb_logo_homing
    set_nozzle_leds_on    ## Set HOME_CURRENT to the current value that was in effect when you calculated stallguard sensitivity.  
    ## This should initially be what is set in your printer.cfg file for the x & y steppers.  
    ## Having this here will allow you to change motor current values in the printer.cfg file in the future while 
    ## eliminating the need to recalculate stall guard sensitivity.
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.5 %}  ## Change this to the vlaue you used when calibrating stallguard.  In your printer.cfg.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    ## Uncomment the following to temporarily change acceleration if you are getting TMC Driver Undercurrent errors. 
    {% set RUN_ACCEL = printer.configfile.settings['printer'].max_accel|int %}	
    {% set HOME_ACCEL = 1000 %}
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL}

    ## Home
    G28 X0
    ## Move away
    G91
    G1 X-10 F1200
    
    G4 P2000  # Wait 2 seconds… (give StallGuard registers time to clear).  You may need to give this more time if it's not reliable.

    ##  Set the current back to what's in the printer.cfg file. 
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

    ## Only uncomment if the code to modify acceleration above was uncommented.
    SET_VELOCITY_LIMIT ACCEL={RUN_ACCEL}

[gcode_macro _HOME_Y]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=sb_logo_homing
    set_nozzle_leds_on
## Set HOME_CURRENT to the current value that was in effect when you calculated stallguard sensitivity.  
    ## This should initially be what is set in your printer.cfg file for the x & y steppers.  
    ## Having this here will allow you to change motor current values in the printer.cfg file in the future while 
    ## eliminating the need to recalculate stall guard sensitivity.
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.5 %}   ## Change this to the vlaue you used when calibrating stallguard.  In your printer.cfg.
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    ## Uncomment the following to temporarily change acceleration if you are getting TMC Driver Undercurrent errors.
    {% set RUN_ACCEL = printer.configfile.settings['printer'].max_accel|int %}	
    {% set HOME_ACCEL = 1000 %}
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print

 ##  Set the current back to what's in the printer.cfg file. 
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

    ## Only uncomment if the code to modify acceleration above was uncommented.
    SET_VELOCITY_LIMIT ACCEL={RUN_ACCEL}    

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30 


[gcode_macro Center_Toolhead]
gcode:
   #G90
  # G1 X60 Y60 Z60
   G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed

   
[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90

  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
   
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False  

   ## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right